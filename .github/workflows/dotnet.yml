name: CI
on:
   push:
     branches: [ "master" ]
   pull_request:
     branches: [ "master" ]

jobs:
   build:
     runs-on: ubuntu-latest
     
     steps:
     - uses: actions/checkout@v3
     - name: Setup CI
       uses: actions/setup-dotnet@v2
       with:
         dotnet-version: 5.0.x
     
     # Build dependencies
     - name: Restore dependencies
       run: dotnet restore
       
     # Build project
     - name: Build
       run: dotnet build --no-restore
       
     # Config report
     - name: Set Test Title
       run: | 
            if ${{ github.event_name == 'pull_request' }}
            then
              echo "title=Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})" >> $GITHUB_ENV
              echo "file_name=TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md" >> $GITHUB_ENV              
            else
              echo "title=Build ${{github.run_number}}" >> $GITHUB_ENV
              echo "file_name=TestReport.${{github.run_number}}.md" >> $GITHUB_ENV
            fi
            
     # Run tests
     - name: Integration Tests
       run: dotnet test --no-restore --no-build --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};" 
       
     # Notify by slack  
#      - name: Upload to slack step
#        uses: adrey/slack-file-upload-action@master
#        if: ${{failure()}}
#        with:
#           token: ${{ secrets.SLACK_TOKEN }}
#           path: ${{github.workspace}}/${{env.file_name}}
#           channel: 'pocdotnet'
          
     - uses: actions/checkout@v2
     - name: Slack Notification
       uses: rtCamp/action-slack-notify@v2
       env:
        SLACK_CHANNEL: pocdotnet
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: ${{github.workspace}}/${{env.file_name}}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}    
